{
	"ex1":{
		"scope": "powershell",
		"prefix": "ex1",
		"body":[
			"",
			"Get-Service -DisplayName *PaperCut* | Format-Table -Property  Name, Status, StartType",
			""
		]
	},
	"ex2":{
		"scope": "powershell",
		"prefix": "ex2",
		"body":["#requires -version 2",
				"<#",
				".SYNOPSIS",
  				"Report on PaperCut MF/NG Status",
				".DESCRIPTION",
  				"Displays a dump of PaperCut related information",
				".PARAMETER <None>",
				".INPUTS",
  				"None",
				".OUTPUTS",
  				"Outputs Demo Report",
				".NOTES",
  				"Version:        0.1",
  				"Author:         Alec Clews",
  				"Creation Date:  $CURRENT_YEAR/$CURRENT_MONTH_NAME",
  				"Purpose/Change: Initial script development",
  				"",
				".EXAMPLE",
  				"<Example goes here. Repeat this attribute for more than one example>:",
				"#>:",
		]
	},
	"ex3":{
		"scope": "powershell",
		"prefix": "ex3",
		"body":[
			"\\$epsonErrCount = (Select-String -Path c:\\tmp\\epsonOPS.log -Pattern error | Measure-Object).count",
			"",
			"if (\\$epsonErrCount -gt 0) {",
			"	write-output \"Epson plugin has reported \\$epsonErrCount errors\"",
			"}",
			"",
		]
	},
	"ex4":{
		"scope": "powershell",
		"prefix": "ex4",
		"body":[
			"if (Get-Service 'Epson Open Platform Solution for PaperCut' -ErrorAction SilentlyContinue) {",
			"",
			"	\\$epsonErrCount = (Select-String -Path c:\\tmp\\epsonOPS.log -Pattern error | Measure-Object).count",
			"",
			"	if (\\$epsonErrCount -gt 0) {",
			"		write-output \"Epson plugin has reported \\$epsonErrCount errors\"",
			"	} else {",
			"		write-output \"Epson plugin reports no errors\"",
			"	}",
			"}",
			"",
		]
	},
	"ex5":{
		"scope": "powershell",
		"prefix": "ex5",
		"body":[
			"",
			"Add-Type -Path \"\\$env:USERPROFILE\\.nuget\\packages\\kveer.xmlrpc\\1.1.1\\lib\\netstandard2.0\\Kveer.XmlRPC.dll\"",
			"Add-Type -Path \"\\$PWD\\ServerCommandProxy\\bin\\Release\\netstandard2.0\\ServerCommandProxy.dll\"",
			"",
			"# If not localhost then this address will needs to be listed as allowed in PaperCut"
			"\\$papercuthost = \"localhost\"",
			"",
			"\\$auth = \"token\" # Value defined in advanced config property \"auth.webservices.auth-token\". Should be random",
			"",
			"# Proxy object to call PaperCut Server API",
			"\\$s = New-Object PaperCut.ServerCommandProxy(\\$papercuthost, 9191, \\$auth)",

			"# Find the value of the Auth key in the PaperCut MF/NG config database",
			"\\$authString = \\$s.GetConfigValue(\"health.api.key\")",
			"",
			"# Set up the http header for the health API ",
			"\\$headers = @{'Authorization' = \\$authString}",
			"",
			"\\$uri = [Uri]\"http://localhost:9191/api/health\"",
			"",
			"# Generate the report",
			"&{",
			"  # Get a list of the processes running ",
			"  Get-Service -DisplayName  *PaperCut* | Select-Object -Property name,status |",
			"            ConvertTo-Html -Fragment -PreContent '<h2>PaperCut Processes</h2>'",
			"",
			"  \\$rsp = Invoke-RestMethod -Uri \\$uri -Method Get -Headers \\$headers",
			"",
			"  \\$rsp.applicationServer.systemInfo |",
			"  ConvertTo-Html -As List -Fragment -PreContent '<h2>PaperCut Services Info</h2>'",
			"",
			"  Write-Output \"<p>Total Printers = \\$(\\$rsp.printers.count)</p>\"",
			"  Write-Output \"<p>Total Devices = \\$(\\$rsp.devices.count)</p>\"",
			" } | Out-File -FilePath .\\report1.html",
			"",
			" Invoke-Expression .\\report1.html",
			"",
		]
	},
	"ex6":{
		"scope": "powershell",
		"prefix": "ex6",
		"body":[
			"dotnet new classlib --name ServerCommandProxy",
			"cd ServerCommandProxy",
			"Remove-Item Class1.cs",
			"Copy-Item 'C:\\Program Files\\PaperCut MF\\server\\examples\\webservices\\csharp\\ServerCommandProxy.cs'",
			"dotnet add package Kveer.XmlRPC --version 1.1.1",
			"dotnet build --configuration Release",
			"cd ..",
		]
	}

}